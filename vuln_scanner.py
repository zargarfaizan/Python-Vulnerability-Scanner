import nmap
import requests
from fpdf import FPDF

# Initialize Nmap scanner
nm = nmap.PortScanner()

def scan_network(target_ip):
    print(f"Scanning {target_ip}...")
# This will use nmap to scan the target default top 1000 ports with vulnerability scanning for services 
    nm.scan(target_ip,'-A')
    scan_data = {}
    
    for host in nm.all_hosts():
        if nm[host].state() == "up":
            scan_data[host] = []
            for proto in nm[host].all_protocols():
                ports = nm[host][proto].keys()
                for port in ports:
                    service = nm[host][proto][port]['name']
                    scan_data[host].append({"port": port, "service": service})
    return scan_data

def fetch_cve(service_name):
    """Fetch known CVEs for a service ()."""
    url = f"https://cve.circl.lu/api/search/{service_name}"
    response = requests.get(url)
    if response.status_code == 200:
        cve_data = response.json()
      # You can change the number as this will only return the top 3 vulnerabilities, If you want to check all the vulnerabilities remove the numeric 3.
        return cve_data[:3]  # Return top 3 vulnerabilities
    return []

def generate_report(scan_data, report_file='vulnerability_report.pdf'):
    pdf = FPDF()
    pdf.set_auto_page_break(auto=True, margin=15)
    pdf.add_page()

    pdf.set_font("Arial", "B", 16)
    pdf.cell(200, 10, txt="Vulnerability Scan Report", ln=True, align="C")

    for host, services in scan_data.items():
        pdf.set_font("Arial", "B", 12)
        pdf.cell(200, 10, txt=f"Host: {host}", ln=True)
        
        for service in services:
            port = service['port']
            service_name = service['service']
            pdf.set_font("Arial", "I", 10)
            pdf.cell(200, 10, txt=f"Port: {port}, Service: {service_name}", ln=True)
            
            # Fetch CVEs
            cve_data = fetch_cve(service_name)
            if cve_data:
                pdf.set_font("Arial", "", 10)
                for cve in cve_data:
                    pdf.cell(200, 10, txt=f"Vulnerability: {cve['id']}, Summary: {cve['summary'][:80]}...", ln=True)

    pdf.output(report_file)
    print(f"Report saved as {report_file}")

if __name__ == "__main__":
    target_ip = input("Enter target IP or domain: ")
    scan_data = scan_network(target_ip)
    generate_report(scan_data)
